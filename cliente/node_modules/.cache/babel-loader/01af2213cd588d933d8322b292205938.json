{"ast":null,"code":"import { FORMULARIO_TAREA, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO } from '../../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case FORMULARIO_TAREA:\n      return { //aca toma una copia del state con todo lo que tenga y lo cambia a true el formulario\n        ...state,\n        formulario: true\n      };\n\n    case OBTENER_PROYECTOS:\n      return { ...state,\n        proyectos: action.payload\n      };\n\n    case AGREGAR_PROYECTO:\n      return { //se copia el state actual\n        ...state,\n        //se toma el state con los proyectos y se agrega el nuevo con action.payload\n        proyectos: [...state.proyectos, action.payload],\n        //despues que se agrega el proyecto quedara como false para que se reinicie\n        formulario: false,\n        //una vez que se valida y se agrega la nueva tarea, reseteamos el errorformulario \n        //para que deje de aparecer en pantalla\n        errorformulario: false\n      };\n\n    case VALIDAR_FORMULARIO:\n      return { ...state,\n        errorformulario: true\n      };\n\n    case PROYECTO_ACTUAL:\n      return { ...state,\n        //vamos a poner un filtro, \n        //hace una iteración con cada uno de ellos comparandolos, extrae el que se elige como proyecto actual\n        proyecto: state.proyectos.filter(proyecto => proyecto.id === action.payload)\n      };\n\n    case ELIMINAR_PROYECTO:\n      return {\n        //aca recorre los proyectos pero deja afuera el que queremos eliminar !==..\n        proyectos: state.proyectos.filter(proyecto => proyecto.id !== action.payload),\n        proyecto: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/Scripts/React103/cliente/src/context/proyectos/proyectoReducer.js"],"names":["FORMULARIO_TAREA","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","state","action","type","formulario","proyectos","payload","errorformulario","proyecto","filter","id"],"mappings":"AAAA,SAASA,gBAAT,EACQC,iBADR,EAEQC,gBAFR,EAGQC,kBAHR,EAIQC,eAJR,EAKQC,iBALR,QAMY,aANZ;AASA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,gBAAL;AACI,aAAO,EACH;AACA,WAAGM,KAFA;AAGHG,QAAAA,UAAU,EAAG;AAHV,OAAP;;AAKJ,SAAKR,iBAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHI,QAAAA,SAAS,EAAEH,MAAM,CAACI;AAFf,OAAP;;AAIJ,SAAKT,gBAAL;AACI,aAAO,EACH;AACA,WAAGI,KAFA;AAGH;AACAI,QAAAA,SAAS,EAAE,CAAC,GAAGJ,KAAK,CAACI,SAAV,EAAqBH,MAAM,CAACI,OAA5B,CAJR;AAKH;AACAF,QAAAA,UAAU,EAAE,KANT;AAOH;AACA;AACAG,QAAAA,eAAe,EAAE;AATd,OAAP;;AAYJ,SAAKT,kBAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHM,QAAAA,eAAe,EAAE;AAFd,OAAP;;AAIJ,SAAKR,eAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEH;AACA;AACAO,QAAAA,QAAQ,EAAEP,KAAK,CAACI,SAAN,CAAgBI,MAAhB,CAAuBD,QAAQ,IAAIA,QAAQ,CAACE,EAAT,KACzCR,MAAM,CAACI,OADD;AAJP,OAAP;;AAOJ,SAAKN,iBAAL;AACI,aAAO;AACH;AACAK,QAAAA,SAAS,EAAEJ,KAAK,CAACI,SAAN,CAAgBI,MAAhB,CAAuBD,QAAQ,IAAIA,QAAQ,CAACE,EAAT,KAC1CR,MAAM,CAACI,OADA,CAFR;AAICE,QAAAA,QAAQ,EAAE;AAJX,OAAP;;AAMJ;AACI,aAAOP,KAAP;AA9CR;AAgDH,CAjDD","sourcesContent":["import { FORMULARIO_TAREA, \r\n        OBTENER_PROYECTOS, \r\n        AGREGAR_PROYECTO,\r\n        VALIDAR_FORMULARIO,\r\n        PROYECTO_ACTUAL,\r\n        ELIMINAR_PROYECTO\r\n     } from '../../types';\r\n\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case FORMULARIO_TAREA:\r\n            return {\r\n                //aca toma una copia del state con todo lo que tenga y lo cambia a true el formulario\r\n                ...state,\r\n                formulario : true\r\n            }\r\n        case OBTENER_PROYECTOS:\r\n            return {\r\n                ...state,\r\n                proyectos: action.payload\r\n            }\r\n        case AGREGAR_PROYECTO:\r\n            return {\r\n                //se copia el state actual\r\n                ...state,\r\n                //se toma el state con los proyectos y se agrega el nuevo con action.payload\r\n                proyectos: [...state.proyectos, action.payload],\r\n                //despues que se agrega el proyecto quedara como false para que se reinicie\r\n                formulario: false,\r\n                //una vez que se valida y se agrega la nueva tarea, reseteamos el errorformulario \r\n                //para que deje de aparecer en pantalla\r\n                errorformulario: false\r\n                \r\n            }\r\n        case VALIDAR_FORMULARIO:\r\n            return {\r\n                ...state,\r\n                errorformulario: true\r\n            }\r\n        case PROYECTO_ACTUAL:\r\n            return {\r\n                ...state,\r\n                //vamos a poner un filtro, \r\n                //hace una iteración con cada uno de ellos comparandolos, extrae el que se elige como proyecto actual\r\n                proyecto: state.proyectos.filter(proyecto => proyecto.id === \r\n                    action.payload )\r\n            }\r\n        case ELIMINAR_PROYECTO:\r\n            return {\r\n                //aca recorre los proyectos pero deja afuera el que queremos eliminar !==..\r\n                proyectos: state.proyectos.filter(proyecto => proyecto.id !== \r\n                    action.payload ),\r\n                    proyecto: null\r\n            }      \r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
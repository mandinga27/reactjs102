{"ast":null,"code":"var _jsxFileName = \"D:\\\\Scripts\\\\React103\\\\cliente\\\\src\\\\context\\\\proyectos\\\\proyectoState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer'; //importamos los types\n\nimport { FORMULARIO_TAREA, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO } from '../../types'; //en gral esto es un hook\n//agregamos nueva variable proyectoState que sera el state inicial\n\nconst ProyectoState = props => {\n  const proyectos = [{\n    id: 1,\n    nombre: 'Trabajo en Altura'\n  }, {\n    id: 2,\n    nombre: 'Trabajo en Caliente'\n  }, {\n    id: 3,\n    nombre: 'Trabajo en Bloqueo'\n  }, {\n    id: 4,\n    nombre: 'Trabajo en Izajes'\n  }]; //aca se cargan todos los states que estaN en el inicio\n\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorformulario: false,\n    //aca proyecto será la tarea selecionada en el menu de la izq.\n    proyecto: null\n  }; //dispatch para ejecutar las acciones o types, es un hook\n  //useReducer es similar a useState\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //Serie de funciones para el CRUD\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_TAREA\n    });\n  }; //Obtener los proyectos\n\n\n  const obtenerProyectos = () => {\n    dispatch({\n      type: OBTENER_PROYECTOS,\n      payload: proyectos\n    });\n  }; //Agregar nuevo proyecto\n\n\n  const agregarProyecto = proyecto => {\n    //Aca se agrega el id\n    proyecto.id = uuidv4(); //luego de asignar el id -> Insertar el proyecto en el state con dispatch\n\n    dispatch({\n      type: AGREGAR_PROYECTO,\n      //este el payload para cambiar el state\n      payload: proyecto\n    });\n  }; //Validar el formulario por errores\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; // funcion que Selecciona la Tarea que el usuario hizo click\n  //proyectoActual le pasaremos como payload-> proyecto en un arraw fucntion\n\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoId\n    });\n  }; //elimina un proyecto\n\n\n  const eliminarProyecto = proyectoId => {\n    dispatch({\n      type: ELIMINAR_PROYECTO,\n      payload: proyectoId\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    //desde aqui nacen los datos\n    //le pasamos props.children para lo que le vallamos a pasar\n    //los diferentes componentes que sean hijos del provider\n    //se pasen los datos a lo largo de todos los diferenrtes componentes\n    //formulacio = state; mostrarFormulario = funcion\n    React.createElement(proyectoContext.Provider, {\n      value: {\n        //se recomienda poner los states arriba y las funciones abajo\n        proyectos: state.proyectos,\n        formulario: state.formulario,\n        errorformulario: state.errorformulario,\n        //proyecto contine el valor que tendra del state.proyecto\n        proyecto: state.proyecto,\n        mostrarFormulario,\n        obtenerProyectos,\n        agregarProyecto,\n        mostrarError,\n        proyectoActual,\n        eliminarProyecto\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, props.children)\n  );\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["D:/Scripts/React103/cliente/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","v4","uuidv4","proyectoContext","proyectoReducer","FORMULARIO_TAREA","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","ProyectoState","props","proyectos","id","nombre","initialState","formulario","errorformulario","proyecto","state","dispatch","mostrarFormulario","type","obtenerProyectos","payload","agregarProyecto","mostrarError","proyectoActual","proyectoId","eliminarProyecto","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\n\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer'; \r\n//importamos los types\r\nimport { FORMULARIO_TAREA, \r\n         OBTENER_PROYECTOS ,\r\n         AGREGAR_PROYECTO,\r\n         VALIDAR_FORMULARIO,\r\n         PROYECTO_ACTUAL,\r\n         ELIMINAR_PROYECTO\r\n} from '../../types';\r\n\r\n\r\n//en gral esto es un hook\r\n//agregamos nueva variable proyectoState que sera el state inicial\r\nconst ProyectoState = props => {\r\n\r\n    const proyectos = [   \r\n        {id: 1, nombre: 'Trabajo en Altura' },\r\n        {id: 2, nombre: 'Trabajo en Caliente' },\r\n        {id: 3, nombre: 'Trabajo en Bloqueo' },\r\n        {id: 4, nombre: 'Trabajo en Izajes' }\r\n    ]\r\n     \r\n    //aca se cargan todos los states que estaN en el inicio\r\n    const initialState = {\r\n        proyectos : [],\r\n        formulario : false,\r\n        errorformulario: false,\r\n        //aca proyecto será la tarea selecionada en el menu de la izq.\r\n        proyecto: null\r\n    }\r\n             \r\n\r\n    //dispatch para ejecutar las acciones o types, es un hook\r\n    //useReducer es similar a useState\r\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\r\n\r\n    //Serie de funciones para el CRUD\r\n    const mostrarFormulario = () => {\r\n        dispatch({\r\n            type: FORMULARIO_TAREA\r\n        })\r\n    }\r\n\r\n    //Obtener los proyectos\r\n    const obtenerProyectos = () => {\r\n        dispatch({\r\n            type: OBTENER_PROYECTOS,\r\n            payload: proyectos\r\n        })     \r\n    }\r\n\r\n    //Agregar nuevo proyecto\r\n    const agregarProyecto =  proyecto => {\r\n        //Aca se agrega el id\r\n        proyecto.id = uuidv4();\r\n\r\n        //luego de asignar el id -> Insertar el proyecto en el state con dispatch\r\n        dispatch({\r\n            type: AGREGAR_PROYECTO,\r\n            //este el payload para cambiar el state\r\n            payload: proyecto\r\n        })\r\n        \r\n    }\r\n\r\n    //Validar el formulario por errores\r\n    const mostrarError = () => {\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        })\r\n    }\r\n\r\n    // funcion que Selecciona la Tarea que el usuario hizo click\r\n    //proyectoActual le pasaremos como payload-> proyecto en un arraw fucntion\r\n    const proyectoActual = proyectoId => {\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n\r\n    //elimina un proyecto\r\n    const eliminarProyecto = proyectoId => {\r\n        dispatch({\r\n            type: ELIMINAR_PROYECTO,\r\n            payload: proyectoId\r\n        })    \r\n    }\r\n    \r\n    return (\r\n        //desde aqui nacen los datos\r\n        //le pasamos props.children para lo que le vallamos a pasar\r\n        //los diferentes componentes que sean hijos del provider\r\n        //se pasen los datos a lo largo de todos los diferenrtes componentes\r\n        //formulacio = state; mostrarFormulario = funcion\r\n        <proyectoContext.Provider\r\n            value={{\r\n                //se recomienda poner los states arriba y las funciones abajo\r\n                proyectos: state.proyectos,\r\n                formulario: state.formulario,\r\n                errorformulario: state.errorformulario,\r\n                //proyecto contine el valor que tendra del state.proyecto\r\n                proyecto: state.proyecto,\r\n                mostrarFormulario,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                mostrarError,\r\n                proyectoActual,\r\n                eliminarProyecto\r\n            }}      \r\n        >\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}
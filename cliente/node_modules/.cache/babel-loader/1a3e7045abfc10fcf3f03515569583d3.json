{"ast":null,"code":"var _jsxFileName = \"D:\\\\Scripts\\\\React103\\\\cliente\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles, Button } from '@material-ui/core';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autentificacion/authContext';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\n\nconst Login = props => {\n  //extraer los valores del context\n  //use context permite acceder a todas las funciones y al state\n  const alertaContext = useContext(AlertaContext);\n  const {\n    alerta,\n    mostrarAlerta\n  } = alertaContext;\n  const authContext = useContext(AuthContext);\n  const {\n    mensaje,\n    autenticado,\n    iniciarSesion\n  } = authContext; //En caso de que el usuario password no exista\n  //un registro duplicado\n\n  useEffect(() => {\n    if (autenticado) {\n      //aca redijiremos al usuario autenticad a la pag de proyectos\n      props.history.push('/proyectos');\n    }\n\n    if (mensaje) {\n      mostrarAlerta();\n    } // eslint-disable-next-line\n\n  }, [mensaje, autenticado, props.history]); //State para iniciar sesión\n\n  const [usuario, guardarUsuario] = useState({\n    email: '',\n    password: ''\n  }); //extraer de usuario\n\n  const {\n    email,\n    password\n  } = usuario; //aqui vamos a ir guardando en el State\n\n  const onChange = e => {\n    guardarUsuario({ //traemos la copia de usuario para lo que este en el State no se \n      //sobre escriba en otra pieza de esta\n      //para reescribir la actual -> [e.target.name] : e.target.value\n      ...usuario,\n      [e.target.name]: e.target.value\n    });\n  }; //Cuando el usuario quiere iniciar sesion\n\n\n  const onSubmit = e => {\n    e.preventDefault(); //Validar que no haya campos vacios\n\n    if (email.trim() === '' || password.trim() || '') {\n      mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n    } //Pasarlo al action si todo esta bien\n\n\n    iniciarSesion({\n      email,\n      password\n    });\n  };\n\n  const useStyles = makeStyles(theme => ({\n    offset: theme.mixins.toolbar,\n    root: {\n      flexGrow: 1 //color: '#000000'\n      //background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n\n    },\n    menuButton: {\n      marginRight: theme.spacing(4)\n    },\n    title: {\n      flexGrow: 1,\n      //color: '#000000',\n      //background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n      fontSize: 28\n    },\n    login: {\n      fontSize: 14,\n      size: 'large',\n      flexGrow: 1 //margin: theme.spacing(1),\n\n    },\n    add: {\n      fontSize: 14,\n      margin: theme.spacing(1)\n    }\n    /*\n    menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n        display: 'none',\n    },\n    },\n    title: {\n      flexGrow:1\n    },\n    appBar: {\n      [theme.breakpoints.up('sm')]: {\n          width: `cal(100% - ${240}px)`,\n          maginLeft: 240,\n      },\n    }\n    */\n\n  }));\n  const classes = useStyles();\n  /*\n  \n  */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-usuario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, alerta ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `alerta ${alerta.categoria}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 26\n    }\n  }, alerta.msg, \" \") : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-form sombra-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Iniciar Sesi\\xF3n\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"Ingresa tu Email\",\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    placeholder: \"Ingresa tu Password\",\n    value: password,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.login,\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(PersonIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 36\n      }\n    }) //value=\"Iniciar Sesión\"\n    ,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, \"Ingresar\"))), /*#__PURE__*/React.createElement(Link, {\n    to: '/registro',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.add,\n    color: \"primary\",\n    type: \"button\",\n    variant: \"text\",\n    startIcon: /*#__PURE__*/React.createElement(AccountBoxIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 36\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, \"Obtener Cuenta\")), /*#__PURE__*/React.createElement(Link, {\n    to: '/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.add,\n    color: \"primary\",\n    type: \"button\",\n    variant: \"text\",\n    startIcon: /*#__PURE__*/React.createElement(AccountBoxIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 36\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, \"Regresar\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.offset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Login;","map":{"version":3,"sources":["D:/Scripts/React103/cliente/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","Link","makeStyles","Button","AlertaContext","AuthContext","PersonIcon","AccountBoxIcon","Login","props","alertaContext","alerta","mostrarAlerta","authContext","mensaje","autenticado","iniciarSesion","history","push","usuario","guardarUsuario","email","password","onChange","e","target","name","value","onSubmit","preventDefault","trim","useStyles","theme","offset","mixins","toolbar","root","flexGrow","menuButton","marginRight","spacing","title","fontSize","login","size","add","margin","classes","categoria","msg"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {  makeStyles, Button } from '@material-ui/core';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autentificacion/authContext';\n\nimport PersonIcon from '@material-ui/icons/Person';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\n\nconst Login = (props) => {\n\n    //extraer los valores del context\n    //use context permite acceder a todas las funciones y al state\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado, iniciarSesion } = authContext;\n\n    //En caso de que el usuario password no exista\n    //un registro duplicado\n    useEffect(() => {\n        if(autenticado) {\n            //aca redijiremos al usuario autenticad a la pag de proyectos\n            props.history.push('/proyectos');\n        }\n        \n        if(mensaje) {\n            mostrarAlerta();\n        }\n        \n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history])\n\n    //State para iniciar sesión\n    const [usuario, guardarUsuario] = useState({\n        email:'',\n        password: ''\n    });\n\n    //extraer de usuario\n    const { email, password} = usuario;\n\n    //aqui vamos a ir guardando en el State\n    const onChange = e => {\n        guardarUsuario({\n            //traemos la copia de usuario para lo que este en el State no se \n            //sobre escriba en otra pieza de esta\n            //para reescribir la actual -> [e.target.name] : e.target.value\n            ...usuario,\n            [e.target.name] : e.target.value\n        });\n    }\n\n    //Cuando el usuario quiere iniciar sesion\n    const onSubmit = e => {\n        e.preventDefault();\n\n        //Validar que no haya campos vacios\n        if(email.trim() === '' || password.trim() || '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n        }\n\n        //Pasarlo al action si todo esta bien\n        iniciarSesion({ email, password });\n    }\n\n    const useStyles = makeStyles(theme => ({\n        offset: theme.mixins.toolbar,\n        root: {\n            flexGrow: 1,\n            //color: '#000000'\n            //background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        },\n        menuButton: {\n            marginRight: theme.spacing(4),\n        },\n        title: {\n            flexGrow: 1,\n            //color: '#000000',\n            //background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n            fontSize: 28    \n        },\n        login: {\n            fontSize: 14,\n            size: 'large',\n            flexGrow: 1,\n            //margin: theme.spacing(1),\n        },\n        add: {\n            fontSize: 14,\n            margin: theme.spacing(1),\n        },\n        /*\n        menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n      },\n      title: {\n          flexGrow:1\n      },\n      appBar: {\n          [theme.breakpoints.up('sm')]: {\n              width: `cal(100% - ${240}px)`,\n              maginLeft: 240,\n          },\n      }\n      */\n    }));\n\n    const classes = useStyles();\n\n    /*\n    \n    */\n    return(\n        <div className=\"form-usuario\">\n            { alerta ? ( <div className={`alerta ${alerta.categoria}`}>{alerta.msg} </div> \n            ) : null }\n            \n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Iniciar Sesión</h1>\n\n                <form\n                    onSubmit={onSubmit}\n                >                  \n                   <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Ingresa tu Email\"\n                            value={email}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Ingresa tu Password\"\n                            value={password}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div>\n\n                    <Button\n                        className={classes.login}     \n                        type=\"submit\"\n                        variant='contained'\n                        color=\"primary\"\n                        startIcon={<PersonIcon/>}\n                        //value=\"Iniciar Sesión\"\n                        fullWidth\n                    >\n                        Ingresar\n                    </Button>\n                    </div>\n                    \n\n                </form>\n               \n                <Link to={'/registro'} >\n                    <Button\n                        className={classes.add} \n                        color=\"primary\"\n                        type=\"button\"\n                        variant=\"text\"\n                        startIcon={<AccountBoxIcon/>}\n\n                         \n                    >\n                       Obtener Cuenta     \n                    </Button>\n                   \n                </Link>\n                <Link to={'/'} >\n                    <Button\n                        className={classes.add} \n                        color=\"primary\"\n                        type=\"button\"\n                        variant=\"text\"\n                        startIcon={<AccountBoxIcon/>}\n\n                         \n                    >\n                       Regresar     \n                    </Button>\n                   \n                </Link>\n\n            </div>\n            <div className={classes.offset}></div>\n        </div>\n        \n    )};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}